{"ast":null,"code":"import _slicedToArray from \"/Users/theresaulwahn/Desktop/flowerapiapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/theresaulwahn/Desktop/flowerapiapp/frontend/src/pages/FlowerInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport \"./flowerinfo.css\";\nimport { FlowerForm } from '../components/FlowerForm';\nimport { FlowerMessage } from '../components/FlowerMessage';\nexport const FlowerInfo = () => {\n  const _useParams = useParams(),\n        flowerId = _useParams.flowerId;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        flower = _useState2[0],\n        setFlower = _useState2[1];\n\n  useEffect(() => {\n    // fetch(`https://api.themoviedb.org/3/movie/${flowerId}?api_key=3812b9925d12c2723ac148f3607b8bb5&language=en-US`)\n    fetch(`https://flowers-mock-data.firebaseio.com/flowers/0/.json`).then(res => res.json()).then(json => {\n      setFlower(json);\n      console.log(json);\n    });\n  }, [flowerId]);\n\n  if (!flower) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Ups, need a moment...\");\n  }\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        messages = _useState4[0],\n        setMessages = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        postedMessage = _useState6[0],\n        setPostedMessage = _useState6[1];\n\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(json => setMessages(json));\n  }, [postedMessage]);\n\n  const handleFormSubmit = message => {\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => setPostedMessage(message)).catch(err => console.log(\"error:\", err));\n  };\n\n  const onLiked = messageId => {\n    console.log(\"Logging in the App.js\", messageId);\n    const updatedMessages = messages.map(message => {\n      if (message._id === messageID) {\n        message.hearts += 1;\n      }\n\n      return message;\n    });\n    setMessages(updatedMessages);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"infoContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"backLink\",\n    to: `/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"backLinkImg\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 30 30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M27 14.5C27 7.596441 21.4035594 2 14.5 2S2 7.596441 2 14.5 7.5964406 27 14.5 27 27 21.403559 27 14.5zm-19.3388348-.353553l7.4852814-7.485282c.1952622-.195262.5118446-.195262.7071068 0l2.1213203 2.121321c.1952622.195262.1952622.511844 0 .707106L12.9644661 14.5l5.0104076 5.010408c.1952622.195262.1952622.511844 0 .707106l-2.1213203 2.121321c-.1952622.195262-.5118446.195262-.7071068 0l-7.4852814-7.485282c-.19799-.19799-.197989-.509117 0-.707106z\",\n    fill: \"#fff\",\n    fillRule: \"evenodd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"All flowers\")), React.createElement(\"div\", {\n    className: \"backDrop\",\n    style: {\n      backgroundImage: `url(${flower.cover_image})`\n    },\n    alt: flower.latin_name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"infoBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(FlowerForm, {\n    className: \"infoPoster\",\n    onFormSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), messages.map(message => React.createElement(FlowerMessage, {\n    key: message._id,\n    message: message,\n    onLiked: onLiked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"titleInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"flowerTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, flower.common_name, React.createElement(\"p\", {\n    className: \"flowerVotes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, flower.notes, \"/10\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, flower.blooming_season))));\n};","map":{"version":3,"sources":["/Users/theresaulwahn/Desktop/flowerapiapp/frontend/src/pages/FlowerInfo.js"],"names":["React","useEffect","useState","useParams","Link","FlowerForm","FlowerMessage","FlowerInfo","flowerId","flower","setFlower","fetch","then","res","json","console","log","messages","setMessages","postedMessage","setPostedMessage","url","handleFormSubmit","message","method","body","JSON","stringify","headers","catch","err","onLiked","messageId","updatedMessages","map","_id","messageID","hearts","backgroundImage","cover_image","latin_name","common_name","notes","blooming_season"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport \"./flowerinfo.css\"\nimport { FlowerForm } from '../components/FlowerForm'\nimport { FlowerMessage } from '../components/FlowerMessage'\n\n\nexport const FlowerInfo = () => {\n  const { flowerId } = useParams()\n  const [ flower, setFlower ] = useState ([])\n\n  useEffect(() => {\n\n  // fetch(`https://api.themoviedb.org/3/movie/${flowerId}?api_key=3812b9925d12c2723ac148f3607b8bb5&language=en-US`)\n  fetch(`https://flowers-mock-data.firebaseio.com/flowers/0/.json`)\n  .then((res) => res.json())\n  .then((json) => {\n    setFlower(json)\n    console.log(json)\n  })  \n  }, [flowerId])\n\n  if (!flower) {\n    return <div>Ups, need a moment...</div>\n  }\n\n  const [messages, setMessages] = useState([])\n  const [postedMessage, setPostedMessage] = useState(\"\")\n\n  useEffect(() => {\n    fetch(url)\n      .then(res => res.json())\n      .then(json => setMessages(json))\n  }, [postedMessage])\n\n  const handleFormSubmit = message => {\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({ message }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(() => setPostedMessage(message))\n      .catch(err => console.log(\"error:\", err))\n  }\n\n  const onLiked = (messageId) => {\n    console.log (\"Logging in the App.js\", messageId)\n    const updatedMessages = messages.map(message => {\n      if (message._id === messageID) {\n        message.hearts += 1\n      }\n      return message\n    })\n    setMessages(updatedMessages)\n  }\n\n  return(\n    <section className=\"infoContainer\">\n\n{/* Link and svg for \"Go Back\"-button */}\n      <Link className=\"backLink\" to={`/`}>\n        <svg className=\"backLinkImg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\">\n          <path d=\"M27 14.5C27 7.596441 21.4035594 2 14.5 2S2 7.596441 2 14.5 7.5964406 27 14.5 27 27 21.403559 27 14.5zm-19.3388348-.353553l7.4852814-7.485282c.1952622-.195262.5118446-.195262.7071068 0l2.1213203 2.121321c.1952622.195262.1952622.511844 0 .707106L12.9644661 14.5l5.0104076 5.010408c.1952622.195262.1952622.511844 0 .707106l-2.1213203 2.121321c-.1952622.195262-.5118446.195262-.7071068 0l-7.4852814-7.485282c-.19799-.19799-.197989-.509117 0-.707106z\" fill=\"#fff\" fillRule=\"evenodd\"></path></svg>\n        <p>All flowers</p>\n      </Link>\n      {/*backDrop background picture with CSS style in react for the site*/}\n      < div className=\"backDrop\" style={{backgroundImage: `url(${flower.cover_image})`}} alt={flower.latin_name} />\n        {/*infoBox contains poster, text about movie, title and rating*/}\n      <div className=\"infoBox\">   \n      <FlowerForm className=\"infoPoster\" onFormSubmit={handleFormSubmit} /> \n      {messages.map(message => (\n        <FlowerMessage key={message._id} message={message} onLiked={onLiked} />  \n      ))}\n        {/* <img className=\"infoPoster\" style={{Image:`url(${flower.cover_image})`}} alt={flower.latin_name} />  */}\n        {/* <img className=\"infoPoster\" src={`\"https://images.unsplash.com/?${flower.cover_image}fit=crop&w=375&q=80\"`} alt={flower.latin_name} />  */}\n        {/* <img className=\"infoPoster\" src={`https://image.tmdb.org/t/p/w342${flower.poster_path}`} alt={flower.latin_name} />  */}\n        {/*titleInfo contains title and rating to make them flex in css*/} \n        <div className=\"titleInfo\">   \n          <h1 className=\"flowerTitle\">{flower.common_name}\n              <p className=\"flowerVotes\">{flower.notes}/10</p>\n          </h1>\n          <p>{flower.blooming_season}</p>\n        </div>  \n      </div>\n    </section> \n  )\n}"]},"metadata":{},"sourceType":"module"}